# MQTT Discovered sensors:
# binary_sensor.service_grafana
# binary_sensor.service_influx
# binary_sensor.service_mqtt
# binary_sensor.service_plex
# binary_sensor.service_rc433
# binary_sensor.service_reverse_proxy
# binary_sensor.service_zway

binary_sensor:
  - platform: template
    sensors:
      services_down_alert:
        value_template: >-
          {% set service_states = namespace(value=[]) -%}
          {% for entity in states.binary_sensor -%}
            {% if entity.entity_id.startswith('binary_sensor.service_') -%}
              {% set service_states.value = service_states.value + [entity.state == 'on'] %}
            {% endif -%}
          {%- endfor -%}
          {{ True if service_states.value|select|first else False }}

automation:
  - alias: 'Services: Update binary_sensor.services_down_alert'
    initial_state: True
    hide_entity: True
    trigger:
      - platform: time_pattern
        minutes: '/1'
        seconds: 0
    action:
      - service: homeassistant.update_entity
        entity_id: binary_sensor.services_down_alert

alert:
  service_down:
    name: "Services down"
    message: >-
      Services down:
        {%- for entity in states.binary_sensor %}
          {%- if entity.entity_id.startswith('binary_sensor.service_') and entity.state == 'on' %}
        - {{ entity.attributes.friendly_name }}
          {%- endif -%}
        {%- endfor %}
    done_message: "Services: All recovered and healthy"
    entity_id: binary_sensor.services_down_alert
    state: 'on'
    repeat: 60  # Renotify every hour
    can_acknowledge: true
    skip_first: false
    notifiers:
      - alerts