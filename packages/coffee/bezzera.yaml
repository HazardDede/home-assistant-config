input_datetime:
  bezzera_last_cleaning:
    name: "Last cleaning"
    has_date: true
    has_time: false
  bezzera_last_filter_replacement:
    name: "Filter replacement"
    has_date: true
    has_time: false

sensor:
  - platform: template
    sensors:
      bezzera_next_cleaning:
        friendly_name: Next Cleaning
        value_template: >-
          {% set last_clean_ts = as_timestamp(strptime(states.input_datetime.bezzera_last_cleaning.state + ' 00:00:00', 'YYYY-MM-DD')) -%}
          {% set target_ts = last_clean_ts + 7 * 24 * 60 * 60 -%}
          {{ target_ts | timestamp_custom('%Y-%m-%d') }}
      bezzera_next_cleaning_days:
        friendly_name: Next Cleaning (days)
        unit_of_measurement: days
        entity_id:
          - sensor.date
          - input_datetime.bezzera_last_cleaning
        value_template: >-
          {% set today_ts = as_timestamp(now().replace(hour=0, minute=0, second=0, microsecond=0)) -%}
          {% set last_clean_ts = as_timestamp(strptime(states.input_datetime.bezzera_last_cleaning.state + ' 00:00:00', 'YYYY-MM-DD')) -%}
          {% set target_ts = last_clean_ts + 7 * 24 * 60 * 60 -%}
          {% set days_left = (today_ts - target_ts) / 24 / 60 / 60 -%}
          {{ days_left | int }}
      bezzera_next_filter_replacement:
        friendly_name: Next Filter Replacement
        value_template: >-
          {% set last_clean_ts = as_timestamp(strptime(states.input_datetime.bezzera_last_filter_replacement.state + ' 00:00:00', 'YYYY-MM-DD')) -%}
          {% set target_ts = last_clean_ts + 30 * 24 * 60 * 60 -%}
          {{ target_ts | timestamp_custom('%Y-%m-%d') }}
      bezzera_next_filter_replacement_days:
        friendly_name: Next Filter Replacement (days)
        unit_of_measurement: days
        entity_id:
          - sensor.date
          - input_datetime.bezzera_last_filter_replacement
        value_template: >-
          {% set today_ts = as_timestamp(now().replace(hour=0, minute=0, second=0, microsecond=0)) -%}
          {% set last_clean_ts = as_timestamp(strptime(states.input_datetime.bezzera_last_filter_replacement.state + ' 00:00:00', 'YYYY-MM-DD')) -%}
          {% set target_ts = last_clean_ts + 30 * 24 * 60 * 60 -%}
          {% set days_left = (today_ts - target_ts) / 24 / 60 / 60 -%}
          {{ days_left | int }}


script:
  # Shortcut to set the last cleaning date to now()
  bezzera_set_last_cleaning:
    sequence:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.bezzera_last_cleaning
          date: "{{ now().strftime('%Y-%m-%d') }}"
  # Shortcut to set the last filter replacement date to now()
  bezzera_set_last_filter_replacement:
    sequence:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.bezzera_last_filter_replacement
          date: "{{ now().strftime('%Y-%m-%d') }}"

automation:
  # Fire @ 09:30 when the last cleaning is already 7 days ago
  - alias: "Bezzera: Remember cleaning"
    trigger:
      platform: time
      at: '09:30:00'
    condition:
      - condition: template
        value_template: "{{ states.sensor.bezzera_next_cleaning_days.state | int >= 0 }}"
    action:
      - service: notify.slack
        data:
          message: "Bezzera: Please clean me. Seven hard days of work leave their marks on me"
  # Fire @ 09:30 when the last filter replacement is already 30 days ago
  - alias: "Bezzera: Remember filter replacement"
    trigger:
      platform: time
      at: '09:30:00'
    condition:
      - condition: template
        value_template: '{{ states.sensor.bezzera_next_filter_replacement_days.state | int >= 0 }}'
    action:
      - service: notify.slack
        data:
          message: "Bezzera: Please replace my filter. The lime is comin'"
